generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
}

model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  content_type_id        Int
  codename               String                   @db.VarChar(100)
  django_content_type    django_content_type      @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_group_permissions auth_group_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             BigInt
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  userapp_user        userapp_user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_userapp_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_userapp_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model travelapp_place {
  id                   BigInt                 @id @default(autoincrement())
  name                 String                 @unique(map: "travelapp_place_name_5e130e6d_uniq") @db.VarChar(30)
  latitude             Int
  longtitude           Int
  region_id            BigInt
  address              String?                @db.LongText
  placeType            String                 @db.VarChar(10)
  travelapp_region     travelapp_region       @relation(fields: [region_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelapp_place_region_id_eea18924_fk_travelapp_region_id")
  travelapp_placeimage travelapp_placeimage[]
  travelapp_tagtoplace travelapp_tagtoplace[]

  @@index([region_id], map: "travelapp_place_region_id_eea18924_fk_travelapp_region_id")
}

model travelapp_placeimage {
  id              BigInt          @id @default(autoincrement())
  src             String?         @db.VarChar(200)
  index           Int?
  place_id        BigInt
  travelapp_place travelapp_place @relation(fields: [place_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelapp_placeimage_place_id_da32cfa0_fk_travelapp_place_id")

  @@index([place_id], map: "travelapp_placeimage_place_id_da32cfa0_fk_travelapp_place_id")
}

model travelapp_placetag {
  id                   BigInt                 @id @default(autoincrement())
  name                 String                 @db.LongText
  travelapp_tagtoplace travelapp_tagtoplace[]
}

model travelapp_region {
  id              BigInt            @id @default(autoincrement())
  region_small    String            @unique(map: "travelapp_region_region_small_e44773f4_uniq") @db.VarChar(20)
  region_large    String            @db.VarChar(20)
  position        String?           @db.VarChar(20)
  travelapp_place travelapp_place[]
}

model travelapp_tagtoplace {
  id                 BigInt             @id @default(autoincrement())
  place_id_id        BigInt
  tag_id_id          BigInt
  travelapp_place    travelapp_place    @relation(fields: [place_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelapp_tagtoplace_place_id_id_0a22af11_fk_travelapp_place_id")
  travelapp_placetag travelapp_placetag @relation(fields: [tag_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "travelapp_tagtoplace_tag_id_id_6ee9f720_fk_travelapp_placetag_id")

  @@index([place_id_id], map: "travelapp_tagtoplace_place_id_id_0a22af11_fk_travelapp_place_id")
  @@index([tag_id_id], map: "travelapp_tagtoplace_tag_id_id_6ee9f720_fk_travelapp_placetag_id")
}

model userapp_user {
  id               BigInt             @id @default(autoincrement())
  password         String             @db.VarChar(128)
  last_login       DateTime?          @db.DateTime(6)
  username         String             @unique(map: "username") @db.VarChar(20)
  email            String             @db.VarChar(50)
  person_type      String?            @db.VarChar(2)
  select_view      Boolean?
  select_cafe      Boolean?
  select_drink     Boolean?
  select_food      Boolean?
  select_activity  Boolean?
  is_staff         Boolean
  is_admin         Boolean
  is_superuser     Boolean
  django_admin_log django_admin_log[]
}
